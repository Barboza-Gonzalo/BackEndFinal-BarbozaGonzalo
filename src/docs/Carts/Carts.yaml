paths:
  /carts/{cid}:
    get:
      summary: "Obtener carrito por ID"
      description: "Obtiene un carrito específico por su ID."
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: "ID del carrito."
      responses:
        '200':
          description: "Carrito obtenido con éxito."
          content:
            application/json:
              schema:
                type: object
                properties:
                  cart:
                    $ref: '#/components/schemas/Cart'
        '404':
          description: "Carrito no encontrado."
        '500':
          description: "Error interno del servidor."

    delete:
      summary: "Eliminar un carrito"
      description: "Elimina todos los productos de un carrito existente."
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: "ID del carrito."
      responses:
        '200':
          description: "Carrito eliminado con éxito."
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "success"
                  payload:
                    $ref: '#/components/schemas/Cart'
        '404':
          description: "Carrito no encontrado."
        '500':
          description: "Error interno del servidor."

  /carts:
    post:
      summary: "Crear un nuevo carrito"
      description: "Crea un nuevo carrito en la base de datos."
      responses:
        '201':
          description: "Carrito creado con éxito."
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "success"
                  payload:
                    $ref: '#/components/schemas/Cart'
        '500':
          description: "Error interno del servidor."

  /carts/{cid}/product/{pid}:
    post:
      summary: "Agregar un producto al carrito"
      description: "Agrega un producto al carrito existente."
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: "ID del carrito."
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: "ID del producto."
      responses:
        '200':
          description: "Producto agregado al carrito con éxito."
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Producto agregado al carrito correctamente"
                  payload:
                    $ref: '#/components/schemas/Cart'
        '404':
          description: "Carrito o producto no encontrado."
        '500':
          description: "Error interno del servidor."

    delete:
      summary: "Eliminar un producto del carrito"
      description: "Elimina un producto específico del carrito."
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: "ID del carrito."
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: "ID del producto."
      responses:
        '200':
          description: "Producto eliminado del carrito con éxito."
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Producto eliminado del carrito correctamente"
                  payload:
                    $ref: '#/components/schemas/Cart'
        '404':
          description: "Carrito o producto no encontrado."
        '500':
          description: "Error interno del servidor."

  /carts/{cid}/products/{pid}:
    put:
      summary: "Actualizar la cantidad de un producto en el carrito"
      description: "Actualiza la cantidad de un producto específico en el carrito."
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: "ID del carrito."
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: "ID del producto."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  example: 2
      responses:
        '200':
          description: "Cantidad del producto actualizada con éxito."
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "success"
                  payload:
                    $ref: '#/components/schemas/Cart'
        '404':
          description: "Carrito o producto no encontrado."
        '500':
          description: "Error interno del servidor."

  /carts/{cid}/purchase:
    get:
      summary: "Crear un ticket de compra"
      description: "Genera un ticket de compra para los productos en el carrito."
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: "ID del carrito."
      responses:
        '200':
          description: "Compra procesada con éxito."
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Compra procesada"
                  productsNotProcessed:
                    type: array
                    items:
                      type: string
                      example: "1234567890abcdef12345678"
        '404':
          description: "Carrito no encontrado."
        '500':
          description: "Error interno del servidor."

components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: string
          example: "60e9c8b8c3f9b70f3047e2b3"
        products:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
                example: "60e9c8b8c3f9b70f3047e2b3"
              quantity:
                type: integer
                example: 2